// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SmartTestTaskKozitski.DAL.Data;

#nullable disable

namespace SmartTestTaskKozitski.DAL.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20250121195512_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SmartTestTaskKozitski.DAL.Entities.Contract", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProcessEquipmentTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductionFacilityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProcessEquipmentTypeId");

                    b.HasIndex("ProductionFacilityId");

                    b.ToTable("Contracts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("698be234-5be8-4e2e-b4b0-8915725464f7"),
                            ProcessEquipmentTypeId = new Guid("befd5d2d-b939-459a-9634-2585900c4075"),
                            ProductionFacilityId = new Guid("b6bdda1a-e99c-4f53-8505-cde90e9f7b61"),
                            Quantity = 10
                        },
                        new
                        {
                            Id = new Guid("0facaf87-f3f6-4d1d-82e2-3ae098ef3732"),
                            ProcessEquipmentTypeId = new Guid("3108ebb3-5899-4e67-a2b2-3c0177d0398f"),
                            ProductionFacilityId = new Guid("89af33b9-6059-4fad-b3fa-5a75f03da498"),
                            Quantity = 20
                        },
                        new
                        {
                            Id = new Guid("eaa38ecd-06b9-40b3-8323-fcb5edc748dd"),
                            ProcessEquipmentTypeId = new Guid("8f0bcd32-8183-489c-8a17-295b7d713945"),
                            ProductionFacilityId = new Guid("07d53b3a-e098-45bb-bfcb-fa34c2473395"),
                            Quantity = 30
                        },
                        new
                        {
                            Id = new Guid("e8b16822-ca86-4deb-9043-2ac1d6c15a9e"),
                            ProcessEquipmentTypeId = new Guid("9e959bfc-4128-4218-92c9-6d05daecd4c9"),
                            ProductionFacilityId = new Guid("684ec398-9db8-4554-a8e0-8232d62ff668"),
                            Quantity = 40
                        },
                        new
                        {
                            Id = new Guid("2a2b89c3-701f-4f0e-8343-5d83d7111eee"),
                            ProcessEquipmentTypeId = new Guid("f767a81f-65ee-445c-88c2-11cb42946c3f"),
                            ProductionFacilityId = new Guid("c70d64e0-8b05-437e-b927-53a2b5a30047"),
                            Quantity = 50
                        });
                });

            modelBuilder.Entity("SmartTestTaskKozitski.DAL.Entities.ProcessEquipmentType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("ProcessEquipmentTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("befd5d2d-b939-459a-9634-2585900c4075")
                        },
                        new
                        {
                            Id = new Guid("3108ebb3-5899-4e67-a2b2-3c0177d0398f")
                        },
                        new
                        {
                            Id = new Guid("8f0bcd32-8183-489c-8a17-295b7d713945")
                        },
                        new
                        {
                            Id = new Guid("9e959bfc-4128-4218-92c9-6d05daecd4c9")
                        },
                        new
                        {
                            Id = new Guid("f767a81f-65ee-445c-88c2-11cb42946c3f")
                        });
                });

            modelBuilder.Entity("SmartTestTaskKozitski.DAL.Entities.ProductionFacility", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("ProductionFacilities");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b6bdda1a-e99c-4f53-8505-cde90e9f7b61")
                        },
                        new
                        {
                            Id = new Guid("89af33b9-6059-4fad-b3fa-5a75f03da498")
                        },
                        new
                        {
                            Id = new Guid("07d53b3a-e098-45bb-bfcb-fa34c2473395")
                        },
                        new
                        {
                            Id = new Guid("684ec398-9db8-4554-a8e0-8232d62ff668")
                        },
                        new
                        {
                            Id = new Guid("c70d64e0-8b05-437e-b927-53a2b5a30047")
                        });
                });

            modelBuilder.Entity("SmartTestTaskKozitski.DAL.Entities.Contract", b =>
                {
                    b.HasOne("SmartTestTaskKozitski.DAL.Entities.ProcessEquipmentType", "ProcessEquipmentType")
                        .WithMany()
                        .HasForeignKey("ProcessEquipmentTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SmartTestTaskKozitski.DAL.Entities.ProductionFacility", "ProductionFacility")
                        .WithMany()
                        .HasForeignKey("ProductionFacilityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ProcessEquipmentType");

                    b.Navigation("ProductionFacility");
                });

            modelBuilder.Entity("SmartTestTaskKozitski.DAL.Entities.ProcessEquipmentType", b =>
                {
                    b.OwnsOne("SmartTestTaskKozitski.DAL.Entities.Specifications", "Specifications", b1 =>
                        {
                            b1.Property<Guid>("ProcessEquipmentTypeId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("Area")
                                .HasColumnType("int")
                                .HasColumnName("Area");

                            b1.Property<long>("Code")
                                .HasColumnType("bigint")
                                .HasColumnName("Code");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Name");

                            b1.HasKey("ProcessEquipmentTypeId");

                            b1.HasIndex("Code")
                                .IsUnique();

                            b1.ToTable("ProcessEquipmentTypes");

                            b1.WithOwner()
                                .HasForeignKey("ProcessEquipmentTypeId");

                            b1.HasData(
                                new
                                {
                                    ProcessEquipmentTypeId = new Guid("befd5d2d-b939-459a-9634-2585900c4075"),
                                    Area = 50,
                                    Code = 1001L,
                                    Name = "TypeA"
                                },
                                new
                                {
                                    ProcessEquipmentTypeId = new Guid("3108ebb3-5899-4e67-a2b2-3c0177d0398f"),
                                    Area = 75,
                                    Code = 1002L,
                                    Name = "TypeB"
                                },
                                new
                                {
                                    ProcessEquipmentTypeId = new Guid("8f0bcd32-8183-489c-8a17-295b7d713945"),
                                    Area = 100,
                                    Code = 1003L,
                                    Name = "TypeC"
                                },
                                new
                                {
                                    ProcessEquipmentTypeId = new Guid("9e959bfc-4128-4218-92c9-6d05daecd4c9"),
                                    Area = 125,
                                    Code = 1004L,
                                    Name = "TypeD"
                                },
                                new
                                {
                                    ProcessEquipmentTypeId = new Guid("f767a81f-65ee-445c-88c2-11cb42946c3f"),
                                    Area = 150,
                                    Code = 1005L,
                                    Name = "TypeE"
                                });
                        });

                    b.Navigation("Specifications")
                        .IsRequired();
                });

            modelBuilder.Entity("SmartTestTaskKozitski.DAL.Entities.ProductionFacility", b =>
                {
                    b.OwnsOne("SmartTestTaskKozitski.DAL.Entities.Specifications", "Specifications", b1 =>
                        {
                            b1.Property<Guid>("ProductionFacilityId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("Area")
                                .HasColumnType("int")
                                .HasColumnName("Area");

                            b1.Property<long>("Code")
                                .HasColumnType("bigint")
                                .HasColumnName("Code");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Name");

                            b1.HasKey("ProductionFacilityId");

                            b1.HasIndex("Code")
                                .IsUnique();

                            b1.ToTable("ProductionFacilities");

                            b1.WithOwner()
                                .HasForeignKey("ProductionFacilityId");

                            b1.HasData(
                                new
                                {
                                    ProductionFacilityId = new Guid("b6bdda1a-e99c-4f53-8505-cde90e9f7b61"),
                                    Area = 200,
                                    Code = 2001L,
                                    Name = "FacilityA"
                                },
                                new
                                {
                                    ProductionFacilityId = new Guid("89af33b9-6059-4fad-b3fa-5a75f03da498"),
                                    Area = 300,
                                    Code = 2002L,
                                    Name = "FacilityB"
                                },
                                new
                                {
                                    ProductionFacilityId = new Guid("07d53b3a-e098-45bb-bfcb-fa34c2473395"),
                                    Area = 400,
                                    Code = 2003L,
                                    Name = "FacilityC"
                                },
                                new
                                {
                                    ProductionFacilityId = new Guid("684ec398-9db8-4554-a8e0-8232d62ff668"),
                                    Area = 500,
                                    Code = 2004L,
                                    Name = "FacilityD"
                                },
                                new
                                {
                                    ProductionFacilityId = new Guid("c70d64e0-8b05-437e-b927-53a2b5a30047"),
                                    Area = 600,
                                    Code = 2005L,
                                    Name = "FacilityE"
                                });
                        });

                    b.Navigation("Specifications")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
